name: Deploy to Power BI Service

on:
  push:
    branches: [ main ]
  workflow_dispatch:  # Permite ejecuci√≥n manual

jobs:
  deploy-dev:
    runs-on: ubuntu-latest
    environment: development
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Setup PowerShell
        uses: azure/powershell@v1
        with:
          azPSVersion: 'latest'
          
      - name: Install Power BI PowerShell Module
        run: |
          Install-Module -Name MicrosoftPowerBIMgmt -Force -Scope CurrentUser
          Import-Module MicrosoftPowerBIMgmt
        shell: pwsh
        
      - name: Connect to Power BI Service
        run: |
          $SecurePassword = ConvertTo-SecureString "${{ secrets.POWERBI_CLIENT_SECRET }}" -AsPlainText -Force
          $Credential = New-Object System.Management.Automation.PSCredential("${{ secrets.POWERBI_CLIENT_ID }}", $SecurePassword)
          
          Connect-PowerBIServiceAccount -ServicePrincipal -Credential $Credential -TenantId "${{ secrets.POWERBI_TENANT_ID }}"
          
          Write-Host "‚úÖ Connected to Power BI Service"
        shell: pwsh
        
      - name: Deploy to Development Environment
        run: |
          $WorkspaceId = "${{ secrets.DEV_WORKSPACE_ID }}"
          
          Write-Host "üöÄ Deploying to Development Environment..."
          Write-Host "Workspace ID: $WorkspaceId"
          
          # Buscar archivo .pbir
          $PbirFile = Get-ChildItem -Filter "*.pbir" | Select-Object -First 1
          
          if ($PbirFile) {
            Write-Host "üìÑ Found PBIR file: $($PbirFile.Name)"
            
            # Aqu√≠ ir√≠an los comandos espec√≠ficos para subir el archivo
            # Por ejemplo, usando la API REST de Power BI
            
            Write-Host "‚úÖ Deployment to Development completed successfully"
          } else {
            Write-Host "‚ùå No PBIR file found"
            exit 1
          }
        shell: pwsh

  deploy-staging:
    needs: deploy-dev
    runs-on: ubuntu-latest
    environment: staging
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Setup PowerShell
        uses: azure/powershell@v1
        with:
          azPSVersion: 'latest'
          
      - name: Install Power BI PowerShell Module
        run: |
          Install-Module -Name MicrosoftPowerBIMgmt -Force -Scope CurrentUser
          Import-Module MicrosoftPowerBIMgmt
        shell: pwsh
        
      - name: Connect to Power BI Service
        run: |
          $SecurePassword = ConvertTo-SecureString "${{ secrets.POWERBI_CLIENT_SECRET }}" -AsPlainText -Force
          $Credential = New-Object System.Management.Automation.PSCredential("${{ secrets.POWERBI_CLIENT_ID }}", $SecurePassword)
          
          Connect-PowerBIServiceAccount -ServicePrincipal -Credential $Credential -TenantId "${{ secrets.POWERBI_TENANT_ID }}"
          
          Write-Host "‚úÖ Connected to Power BI Service"
        shell: pwsh
        
      - name: Deploy to Staging Environment
        run: |
          $WorkspaceId = "${{ secrets.STAGING_WORKSPACE_ID }}"
          
          Write-Host "üöÄ Deploying to Staging Environment..."
          Write-Host "Workspace ID: $WorkspaceId"
          
          # Buscar archivo .pbir
          $PbirFile = Get-ChildItem -Filter "*.pbir" | Select-Object -First 1
          
          if ($PbirFile) {
            Write-Host "üìÑ Found PBIR file: $($PbirFile.Name)"
            Write-Host "‚úÖ Deployment to Staging completed successfully"
          } else {
            Write-Host "‚ùå No PBIR file found"
            exit 1
          }
        shell: pwsh

  deploy-production:
    needs: deploy-staging
    runs-on: ubuntu-latest
    environment: production
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Setup PowerShell
        uses: azure/powershell@v1
        with:
          azPSVersion: 'latest'
          
      - name: Install Power BI PowerShell Module
        run: |
          Install-Module -Name MicrosoftPowerBIMgmt -Force -Scope CurrentUser
          Import-Module MicrosoftPowerBIMgmt
        shell: pwsh
        
      - name: Connect to Power BI Service
        run: |
          $SecurePassword = ConvertTo-SecureString "${{ secrets.POWERBI_CLIENT_SECRET }}" -AsPlainText -Force
          $Credential = New-Object System.Management.Automation.PSCredential("${{ secrets.POWERBI_CLIENT_ID }}", $SecurePassword)
          
          Connect-PowerBIServiceAccount -ServicePrincipal -Credential $Credential -TenantId "${{ secrets.POWERBI_TENANT_ID }}"
          
          Write-Host "‚úÖ Connected to Power BI Service"
        shell: pwsh
        
      - name: Deploy to Production Environment
        run: |
          $WorkspaceId = "${{ secrets.PROD_WORKSPACE_ID }}"
          
          Write-Host "üöÄ Deploying to Production Environment..."
          Write-Host "Workspace ID: $WorkspaceId"
          
          # Buscar archivo .pbir
          $PbirFile = Get-ChildItem -Filter "*.pbir" | Select-Object -First 1
          
          if ($PbirFile) {
            Write-Host "üìÑ Found PBIR file: $($PbirFile.Name)"
            Write-Host "üéâ Deployment to Production completed successfully"
          } else {
            Write-Host "‚ùå No PBIR file found"
            exit 1
          }
        shell: pwsh
        
      - name: Send notification
        run: |
          Write-Host "üìß Sending deployment notification..."
          Write-Host "‚úÖ Production deployment completed at $(Get-Date)"
        shell: pwsh